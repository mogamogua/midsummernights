{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer, useEffect, useCallback } from \"react\"; //LOADING, SUCCESS, ERROR\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"LOADING\":\n      return {\n        loading: true,\n        data: null,\n        error: null\n      };\n\n    case \"SUCCESS\":\n      return {\n        loading: false,\n        data: action.data,\n        error: null\n      };\n\n    case \"ERROR\":\n      return {\n        loading: false,\n        data: false,\n        error: action.error\n      };\n\n    default:\n      throw new Error(\"Unhandled action type:\" + action.type);\n  }\n}\n\nfunction useAsync(callback, deps = [], skip = false) {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    loading: false,\n    data: null,\n    error: null\n  });\n  const fetchData = useCallback(async () => {\n    dispatch({\n      type: \"LOADING\"\n    });\n\n    try {\n      const data = await callback();\n      dispatch({\n        type: \"SUCCESS\",\n        data\n      });\n    } catch (e) {\n      dispatch({\n        type: \"ERROR\",\n        error: e\n      });\n    }\n  }, [callback]);\n  useEffect(() => {\n    //skip === true면 생략\n    if (skip) {\n      return;\n    }\n\n    fetchData(); // eslint-disable-next-line\n  }, deps);\n  return [state, fetchData];\n}\n\n_s(useAsync, \"sdEo3BwV+IO0DTIzsMvJzIK2vqc=\");\n\nexport default useAsync;","map":{"version":3,"sources":["C:/Users/sugar/Desktop/reactMaster/API-practice/api_practice/src/useAsync.js"],"names":["useReducer","useEffect","useCallback","reducer","state","action","type","loading","data","error","Error","useAsync","callback","deps","skip","dispatch","fetchData","e"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,WAAhC,QAAmD,OAAnD,C,CAEA;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AACE,aAAO;AACLC,QAAAA,OAAO,EAAE,IADJ;AAELC,QAAAA,IAAI,EAAE,IAFD;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAK,SAAL;AACE,aAAO;AACLF,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAFR;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAK,OAAL;AACE,aAAO;AACLF,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,IAAI,EAAE,KAFD;AAGLC,QAAAA,KAAK,EAAEJ,MAAM,CAACI;AAHT,OAAP;;AAKF;AACE,YAAM,IAAIC,KAAJ,CAAU,2BAA2BL,MAAM,CAACC,IAA5C,CAAN;AApBJ;AAsBD;;AAED,SAASK,QAAT,CAAkBC,QAAlB,EAA4BC,IAAI,GAAG,EAAnC,EAAuCC,IAAI,GAAG,KAA9C,EAAqD;AAAA;;AACnD,QAAM,CAACV,KAAD,EAAQW,QAAR,IAAoBf,UAAU,CAACG,OAAD,EAAU;AAC5CI,IAAAA,OAAO,EAAE,KADmC;AAE5CC,IAAAA,IAAI,EAAE,IAFsC;AAG5CC,IAAAA,KAAK,EAAE;AAHqC,GAAV,CAApC;AAMA,QAAMO,SAAS,GAAGd,WAAW,CAAC,YAAY;AACxCa,IAAAA,QAAQ,CAAC;AAAET,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAME,IAAI,GAAG,MAAMI,QAAQ,EAA3B;AACAG,MAAAA,QAAQ,CAAC;AAAET,QAAAA,IAAI,EAAE,SAAR;AAAmBE,QAAAA;AAAnB,OAAD,CAAR;AACD,KAHD,CAGE,OAAOS,CAAP,EAAU;AACVF,MAAAA,QAAQ,CAAC;AAAET,QAAAA,IAAI,EAAE,OAAR;AAAiBG,QAAAA,KAAK,EAAEQ;AAAxB,OAAD,CAAR;AACD;AACF,GAR4B,EAQ1B,CAACL,QAAD,CAR0B,CAA7B;AAUAX,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIa,IAAJ,EAAU;AACR;AACD;;AACDE,IAAAA,SAAS,GALK,CAMd;AACD,GAPQ,EAONH,IAPM,CAAT;AASA,SAAO,CAACT,KAAD,EAAQY,SAAR,CAAP;AACD;;GA3BQL,Q;;AA6BT,eAAeA,QAAf","sourcesContent":["import { useReducer, useEffect, useCallback } from \"react\";\r\n\r\n//LOADING, SUCCESS, ERROR\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOADING\":\r\n      return {\r\n        loading: true,\r\n        data: null,\r\n        error: null,\r\n      };\r\n    case \"SUCCESS\":\r\n      return {\r\n        loading: false,\r\n        data: action.data,\r\n        error: null,\r\n      };\r\n    case \"ERROR\":\r\n      return {\r\n        loading: false,\r\n        data: false,\r\n        error: action.error,\r\n      };\r\n    default:\r\n      throw new Error(\"Unhandled action type:\" + action.type);\r\n  }\r\n}\r\n\r\nfunction useAsync(callback, deps = [], skip = false) {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    loading: false,\r\n    data: null,\r\n    error: null,\r\n  });\r\n\r\n  const fetchData = useCallback(async () => {\r\n    dispatch({ type: \"LOADING\" });\r\n    try {\r\n      const data = await callback();\r\n      dispatch({ type: \"SUCCESS\", data });\r\n    } catch (e) {\r\n      dispatch({ type: \"ERROR\", error: e });\r\n    }\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    //skip === true면 생략\r\n    if (skip) {\r\n      return;\r\n    }\r\n    fetchData();\r\n    // eslint-disable-next-line\r\n  }, deps);\r\n\r\n  return [state, fetchData];\r\n}\r\n\r\nexport default useAsync;\r\n"]},"metadata":{},"sourceType":"module"}