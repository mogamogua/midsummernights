{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sugar\\\\Desktop\\\\reactMaster\\\\API-practice\\\\api_practice\\\\src\\\\UserContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { createContext, useReducer, useContext } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  users: {\n    loading: false,\n    data: null,\n    error: null\n  },\n  user: {\n    loading: false,\n    data: null,\n    error: null\n  }\n};\nconst loadingState = {\n  loading: true,\n  data: null,\n  error: null\n};\n\nconst success = data => ({\n  loading: false,\n  data,\n  error: null\n});\n\nconst error = e => ({\n  loading: false,\n  data: null,\n  error: e\n}); //6개의 액션 처리할 것임.\n//GET_USERS\n//GET_USERS_SUCCESS\n//GET_USERS_ERROR\n//GET_USER\n//GET_USER_SUCCESS\n//GET_USER_ERROR\n\n\nfunction usersReducer(state, action) {\n  switch (action.type) {\n    case \"GET_USERS\":\n      return { ...state,\n        users: loadingState\n      };\n\n    case \"GET_USERS_SUCCESS\":\n      return { ...state,\n        users: success(action.data)\n      };\n\n    case \"GET_USERS_ERROR\":\n      return { ...state,\n        users: error(action.error)\n      };\n\n    case \"GET_USER\":\n      return { ...state,\n        user: loadingState\n      };\n\n    case \"GET_USER_SUCCESS\":\n      return { ...state,\n        user: success(action.data)\n      };\n\n    case \"GET_USER_ERROR\":\n      return { ...state,\n        user: error(action.error)\n      };\n\n    default:\n      throw new Error(\"Unhandled action type\", action.type);\n  }\n} //이걸 가지고 context만들자\n// state전용, dispatch전용 -. 따로 만들어야 컴포넌트 최적화에 용이하다.\n\n\nconst UsersStateContext = /*#__PURE__*/createContext(null); //상태를 위한 context\n\nconst UsersDispatchContext = /*#__PURE__*/createContext(null); //dispatch를 위한 context\n\nexport function UsersProvider({\n  children\n}) {\n  _s();\n\n  const [state, dispatch] = useReducer(usersReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(UsersStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(UsersDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UsersProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = UsersProvider;\nexport function useUsersstate() {\n  _s2();\n\n  const state = useContext(UsersStateContext);\n\n  if (!state) {\n    throw new Error(\"Cannot find UserProvider\");\n  }\n\n  return state;\n}\n\n_s2(useUsersstate, \"kdLImxeHm3898p7tqgy8Fclg5s8=\");\n\nexport function useUsersDispatch() {\n  _s3();\n\n  const dispatch = useContext(UsersDispatchContext);\n\n  if (!dispatch) {\n    throw new Error(\"Cannot find UserProvider\");\n  }\n\n  return dispatch;\n}\n\n_s3(useUsersDispatch, \"kCU+r/6VuXUfg74P0SIOBSNFld8=\");\n\nexport async function getUsers(dispatch) {\n  dispatch({\n    type: \"GET_USERS\"\n  });\n\n  try {\n    const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    dispatch({\n      type: \"GET_USERS_SUCCESS\",\n      data: response.data\n    });\n  } catch (e) {\n    dispatch({\n      type: \"GET_USERS_ERROR\",\n      error: e\n    });\n  }\n}\nexport async function getUser(dispatch, id) {\n  dispatch({\n    type: \"GET_USER\"\n  });\n\n  try {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({\n      type: \"GET_USER_SUCCESS\",\n      data: response.data\n    });\n  } catch (e) {\n    dispatch({\n      type: \"GET_USER_ERROR\",\n      error: e\n    });\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersProvider\");","map":{"version":3,"sources":["C:/Users/sugar/Desktop/reactMaster/API-practice/api_practice/src/UserContext.js"],"names":["React","createContext","useReducer","useContext","axios","initialState","users","loading","data","error","user","loadingState","success","e","usersReducer","state","action","type","Error","UsersStateContext","UsersDispatchContext","UsersProvider","children","dispatch","useUsersstate","useUsersDispatch","getUsers","response","get","getUser","id"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer, useContext } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n  users: {\r\n    loading: false,\r\n    data: null,\r\n    error: null,\r\n  },\r\n  user: {\r\n    loading: false,\r\n    data: null,\r\n    error: null,\r\n  },\r\n};\r\n\r\nconst loadingState = {\r\n  loading: true,\r\n  data: null,\r\n  error: null,\r\n};\r\n\r\nconst success = (data) => ({\r\n  loading: false,\r\n  data,\r\n  error: null,\r\n});\r\n\r\nconst error = (e) => ({\r\n  loading: false,\r\n  data: null,\r\n  error: e,\r\n});\r\n\r\n//6개의 액션 처리할 것임.\r\n\r\n//GET_USERS\r\n//GET_USERS_SUCCESS\r\n//GET_USERS_ERROR\r\n//GET_USER\r\n//GET_USER_SUCCESS\r\n//GET_USER_ERROR\r\n\r\nfunction usersReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"GET_USERS\":\r\n      return {\r\n        ...state,\r\n        users: loadingState,\r\n      };\r\n    case \"GET_USERS_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        users: success(action.data),\r\n      };\r\n    case \"GET_USERS_ERROR\":\r\n      return {\r\n        ...state,\r\n        users: error(action.error),\r\n      };\r\n    case \"GET_USER\":\r\n      return {\r\n        ...state,\r\n        user: loadingState,\r\n      };\r\n    case \"GET_USER_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        user: success(action.data),\r\n      };\r\n    case \"GET_USER_ERROR\":\r\n      return {\r\n        ...state,\r\n        user: error(action.error),\r\n      };\r\n    default:\r\n      throw new Error(\"Unhandled action type\", action.type);\r\n  }\r\n}\r\n\r\n//이걸 가지고 context만들자\r\n// state전용, dispatch전용 -. 따로 만들어야 컴포넌트 최적화에 용이하다.\r\n\r\nconst UsersStateContext = createContext(null); //상태를 위한 context\r\nconst UsersDispatchContext = createContext(null); //dispatch를 위한 context\r\n\r\nexport function UsersProvider({ children }) {\r\n  const [state, dispatch] = useReducer(usersReducer, initialState);\r\n  return (\r\n    <UsersStateContext.Provider value={state}>\r\n      <UsersDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </UsersDispatchContext.Provider>\r\n    </UsersStateContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useUsersstate() {\r\n  const state = useContext(UsersStateContext);\r\n  if (!state) {\r\n    throw new Error(\"Cannot find UserProvider\");\r\n  }\r\n  return state;\r\n}\r\n\r\nexport function useUsersDispatch() {\r\n  const dispatch = useContext(UsersDispatchContext);\r\n  if (!dispatch) {\r\n    throw new Error(\"Cannot find UserProvider\");\r\n  }\r\n  return dispatch;\r\n}\r\n\r\nexport async function getUsers(dispatch) {\r\n  dispatch({ type: \"GET_USERS\" });\r\n  try {\r\n    const response = await axios.get(\r\n      \"https://jsonplaceholder.typicode.com/users\"\r\n    );\r\n    dispatch({ type: \"GET_USERS_SUCCESS\", data: response.data });\r\n  } catch (e) {\r\n    dispatch({\r\n      type: \"GET_USERS_ERROR\",\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nexport async function getUser(dispatch, id) {\r\n  dispatch({ type: \"GET_USER\" });\r\n  try {\r\n    const response = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    dispatch({ type: \"GET_USER_SUCCESS\", data: response.data });\r\n  } catch (e) {\r\n    dispatch({\r\n      type: \"GET_USER_ERROR\",\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}