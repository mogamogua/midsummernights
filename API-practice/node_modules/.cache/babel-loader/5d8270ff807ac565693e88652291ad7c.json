{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sugar\\\\Desktop\\\\reactMaster\\\\API-practice\\\\api_practice\\\\src\\\\User.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { getUser, useUsersDispatch, useUsersState } from \"./UsersContext\"; // import axios from \"axios\";\n// import { useAsync } from \"react-async\";\n// async function getUser({ id }) {\n//   const response = await axios.get(\n//     `https://jsonplaceholder.typicode.com/users/${id}`\n//   );\n//   return response.data;\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction User({\n  id\n}) {\n  _s();\n\n  // const {\n  //   data: user,\n  //   error,\n  //   isLoading,\n  // } = useAsync({\n  //   promiseFn: getUser, //promise반환하는 함수넣어주기\n  //   id, // 처음 렌더링 될 때 getUser에 id값을 넣어서 호출\n  //   watch: id, //id값이 바뀔 때마다 함수가 호출하겠다 (deps에 [id]넣는것과 같음)\n  // });\n  const state = useUsersState();\n  const dispatch = useUsersDispatch();\n  useEffect(() => {\n    getUser(dispatch, id);\n  }, [dispatch, id]);\n  const {\n    data: user,\n    loading,\n    error\n  } = state.user;\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uB85C\\uB529\\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n  if (!user) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Email: \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(User, \"m3mEUhrRNgnGjJYZUQS5mbuFzOc=\", false, function () {\n  return [useUsersState, useUsersDispatch];\n});\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["C:/Users/sugar/Desktop/reactMaster/API-practice/api_practice/src/User.js"],"names":["React","useEffect","getUser","useUsersDispatch","useUsersState","User","id","state","dispatch","data","user","loading","error","username","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,gBAAlB,EAAoCC,aAApC,QAAyD,gBAAzD,C,CACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAsB;AAAA;;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,KAAK,GAAGH,aAAa,EAA3B;AACA,QAAMI,QAAQ,GAAGL,gBAAgB,EAAjC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,OAAO,CAACM,QAAD,EAAWF,EAAX,CAAP;AACD,GAFQ,EAEN,CAACE,QAAD,EAAWF,EAAX,CAFM,CAAT;AAGA,QAAM;AAAEG,IAAAA,IAAI,EAAEC,IAAR;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA;AAAvB,MAAiCL,KAAK,CAACG,IAA7C;AACA,MAAIC,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,MAAI,CAACF,IAAL,EAAW,OAAO,IAAP;AAEX,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA,kBAAKA,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BACE;AAAA,gCAAWH,IAAI,CAACI,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAUD;;GAhCQT,I;UAWOD,a,EACGD,gB;;;KAZVE,I;AAkCT,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { getUser, useUsersDispatch, useUsersState } from \"./UsersContext\";\r\n// import axios from \"axios\";\r\n// import { useAsync } from \"react-async\";\r\n\r\n// async function getUser({ id }) {\r\n//   const response = await axios.get(\r\n//     `https://jsonplaceholder.typicode.com/users/${id}`\r\n//   );\r\n//   return response.data;\r\n// }\r\n\r\nfunction User({ id }) {\r\n  // const {\r\n  //   data: user,\r\n  //   error,\r\n  //   isLoading,\r\n  // } = useAsync({\r\n  //   promiseFn: getUser, //promise반환하는 함수넣어주기\r\n  //   id, // 처음 렌더링 될 때 getUser에 id값을 넣어서 호출\r\n  //   watch: id, //id값이 바뀔 때마다 함수가 호출하겠다 (deps에 [id]넣는것과 같음)\r\n  // });\r\n\r\n  const state = useUsersState();\r\n  const dispatch = useUsersDispatch();\r\n\r\n  useEffect(() => {\r\n    getUser(dispatch, id);\r\n  }, [dispatch, id]);\r\n  const { data: user, loading, error } = state.user;\r\n  if (loading) return <div>로딩중...</div>;\r\n  if (error) return <div>에러가 발생했습니다.</div>;\r\n  if (!user) return null;\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h2>{user.username}</h2>\r\n        <p>\r\n          <b>Email: {user.email}</b>\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}